trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  jobs:
  - job: Job1
    steps:
    - bash: echo First Job
    - bash: echo PipelineLevelVariable -> $(PipelineLevelVariable)
    - bash: echo Build.BuildId -> $(Build.BuildId)
    - bash: echo Build.BuildNumber -> $(Build.BuildNumber)
    - bash: echo Build.SourceBranchName -> $(Build.SourceBranchName)
    # - bash: echo Build.SourcesDirectory -> $(Build.SourcesDirectory)
    # - bash: echo Build.ArtifactStagingDirectory -> $(Build.ArtifactStagingDirectory)
    # - bash: echo System.DefaultWorkingDirectory -> $(System.DefaultWorkingDirectory)
    - bash: ls -R $(System.DefaultWorkingDirectory)
  # - job: job2
  #   steps:
  #   - bash: echo Second job
# - stage: DevDeploy
#   variables:
#     environment: Dev
#   dependsOn: Build
#   jobs:
#   - job: DevDeployJob
#     displayName: 'Run DEV deploy Job'
#     steps:
#     - bash: echo DevDeployJob $(PipelineLevelVariable) - $(environment)
# - stage: QADeploy
#   variables:
#       environment: QA
#   dependsOn: DevDeploy
#   jobs:
#     - job: QADeployJob
#       displayName: 'Run QA deploy Job'
#       steps:
#         - bash: echo QADeployJob $(PipelineLevelVariable) - $(environment)
# - stage: ProdDeploy
#   dependsOn: 
#   - DevDeploy
#   - QADeploy
#   jobs:
#     - job: ProdDeployJob
#       displayName: 'Run Prod deploy Job'
#       steps:
#         - bash: echo ProdDeployJob


